// <auto-generated />
using System;
using EasyParkingAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyParkingAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250903001441_MIG_0009")]
    partial class MIG_0009
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.DataVehiculoAlojado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadActualAlojados")
                        .HasColumnType("int");

                    b.Property<int>("CapacidadDeAlojamiento")
                        .HasColumnType("int");

                    b.Property<int>("EstacionamientoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tarifa_Dia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tarifa_Hora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tarifa_Mes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tarifa_Semana")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoDeVehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstacionamientoId");

                    b.ToTable("DataVehiculoAlojados");
                });

            modelBuilder.Entity("Model.Estacionamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactivo")
                        .HasColumnType("bit");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<decimal>("MontoReserva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PublicacionPausada")
                        .HasColumnType("bit");

                    b.Property<string>("TipoDeLugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estacionamientos");
                });

            modelBuilder.Entity("Model.Favorito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstacionamientoId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Favoritos");
                });

            modelBuilder.Entity("Model.Jornada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaDeLaSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstacionamientoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstacionamientoId");

                    b.ToTable("Jornadas");
                });

            modelBuilder.Entity("Model.RangoH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DesdeHora")
                        .HasColumnType("int");

                    b.Property<int>("DesdeMinuto")
                        .HasColumnType("int");

                    b.Property<int>("HastaHora")
                        .HasColumnType("int");

                    b.Property<int>("HastaMinuto")
                        .HasColumnType("int");

                    b.Property<int>("JornadaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JornadaId");

                    b.ToTable("RangoHs");
                });

            modelBuilder.Entity("Model.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoDeValidacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstacionamientoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaDeArribo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDeCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDeExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDeSalida")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Model.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TipoDeVehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Patente")
                        .IsUnique();

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("Model.DataVehiculoAlojado", b =>
                {
                    b.HasOne("Model.Estacionamiento", null)
                        .WithMany("TiposDeVehiculosAdmitidos")
                        .HasForeignKey("EstacionamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Jornada", b =>
                {
                    b.HasOne("Model.Estacionamiento", null)
                        .WithMany("Jornadas")
                        .HasForeignKey("EstacionamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.RangoH", b =>
                {
                    b.HasOne("Model.Jornada", null)
                        .WithMany("Horarios")
                        .HasForeignKey("JornadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Estacionamiento", b =>
                {
                    b.Navigation("Jornadas");

                    b.Navigation("TiposDeVehiculosAdmitidos");
                });

            modelBuilder.Entity("Model.Jornada", b =>
                {
                    b.Navigation("Horarios");
                });
#pragma warning restore 612, 618
        }
    }
}
